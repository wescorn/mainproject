version: "3.7"
services:
  versiontwo:
    build:
      args:
        user: admin
        uid: 1000
      context: ./version-two
      dockerfile: Dockerfile
    image: versiontwo
    ports:
      - 9000:9000
    container_name: versiontwo-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./version-two/:/var/www
    networks:
      - mainnetwork
    
  orders:
    build:
      args:
        user: admin
        uid: 1000
      context: ./orders
      dockerfile: Dockerfile
    image: orders
    ports:
      - 9100:9100
    container_name: orders-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./orders/:/var/www
    networks:
      - mainnetwork

  versiontwo-db:
    image: mysql:8.0
    container_name: versiontwo-db
    restart: unless-stopped
    env_file:
      - version-two/.env
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - ../versiontwo_mysql_data:/var/lib/mysql
    networks:
      - mainnetwork
  orders-db:
    image: mysql:8.0
    container_name: orders-db
    restart: unless-stopped
    env_file:
      - orders/.env
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - ../orders_mysql_data:/var/lib/mysql
    networks:
      - mainnetwork
  versiontwo-nginx:
    image: nginx
    container_name: versiontwo-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./version-two/:/var/www
      - ./nginx/versiontwo/logs/:/var/log/nginx/
      - ./nginx/versiontwo/conf.d/:/etc/nginx/conf.d/
    networks:
      - mainnetwork
    depends_on:
      - versiontwo
  orders-nginx:
    image: nginx
    container_name: orders-nginx
    restart: unless-stopped
    ports:
      - 7000:80
    volumes:
      - ./orders/:/var/www
      - ./nginx/orders/logs/:/var/log/nginx/
      - ./nginx/orders/conf.d/:/etc/nginx/conf.d/
    networks:
      - mainnetwork
    depends_on:
      - orders
networks:
  mainnetwork:
    driver: bridge
volumes:
  mysql_data:
