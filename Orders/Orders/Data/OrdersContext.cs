using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Storage;
using Orders.Models;

namespace Orders.Data
{
    public class OrdersContext : DbContext
    {
        public OrdersContext(DbContextOptions<OrdersContext> options) : base(options) { }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            // There is some retarded bug where entity framework generates SQL syntax that is invalid in MySql, namely: "DEFAULT VALUES()".
            // In MySql it is just "VALUES()", so i made this MySqlDefaultValuesInterceptor class, which will modify the SQL generated by Entity Framework.
            // If the SQL contains "DEFAULT VALUES()" it will replace it with "VALUES()". Problem solved ✓ .. Hopefully this doesn't break anything else.
            optionsBuilder.AddInterceptors(new MySqlDefaultValuesInterceptor());
            base.OnConfiguring(optionsBuilder);
        }   

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {

        }

        public DbSet<Order> Orders { get; set; }
    }
}
